import discord
from typing import Any, Dict
import datetime
from discord import Embed
import random
from config import config

__all__: list[str] = ("generate_pollinate_embed", "generate_error_message")


async def generate_pollinate_embed(
    interaction: discord.Interaction,
    private: bool,
    dic: Dict[str, Any],
    time_taken: datetime.timedelta,
) -> Embed:
    embed = discord.Embed(
        title="",
        timestamp=datetime.datetime.now(datetime.timezone.utc),
        url=dic["url"],
    )

    embed.add_field(
        name="Prompt",
        value=f"```{dic['prompt'][:1020] + '...' if len(dic['prompt']) >= 1024 else dic['prompt']}```",
        inline=False,
    )

    if (
        len(dic["prompt"])
        < config.image_generation.validation.max_enhanced_prompt_length
        or dic["enhance"]
    ):
        if "enhanced_prompt" in dic and dic["enhanced_prompt"] is not None:
            embed.add_field(
                name="Enhanced Prompt",
                value=f"```{dic['enhanced_prompt'][:1020] + '...' if len(dic['enhanced_prompt']) >= 1024 else dic['enhanced_prompt']}```",
                inline=False,
            )

    embed.add_field(name="Seed", value=f"```{dic['seed']}```", inline=True)
    embed.add_field(
        name="Time Taken",
        value=f"```{round(time_taken.total_seconds(), 2)} s```",
        inline=True,
    )

    embed.add_field(name="", value="", inline=False)

    embed.add_field(name="Model", value=f"```{dic['model']}```", inline=True)
    embed.add_field(
        name="Dimensions", value=f"```{dic['width']}x{dic['height']}```", inline=True
    )

    if not private:
        embed.set_image(url="attachment://image.png")
    else:
        embed.set_image(url=dic["url"])

    embed.set_footer(text=f"Generated by {interaction.user}")

    return embed


async def generate_error_message(
    interaction: discord.Interaction,
    error,
    cooldown_configuration=None,
) -> discord.Embed:
    if cooldown_configuration is None:
        cooldown_configuration: list[str] = [
            "- 1 time every 10 seconds",
        ]

    end_time = datetime.datetime.now() + datetime.timedelta(seconds=error.retry_after)
    end_time_ts = int(end_time.timestamp())

    embed = discord.Embed(
        title="‚è≥ Cooldown",
        description=f"### You can use this command again <t:{end_time_ts}:R>",
        color=int(config.ui.colors.error, 16),
        timestamp=interaction.created_at,
    )
    embed.set_image(url=random.choice(config.resources.waiting_gifs))

    embed.add_field(
        name="How many times can I use this command?",
        value="\n".join(cooldown_configuration),
        inline=False,
    )

    try:
        embed.set_footer(
            text=f"{interaction.user} used /{interaction.command.name}",
            icon_url=interaction.user.avatar,
        )
    except Exception:
        embed.set_footer(
            text=f"{interaction.user} used /{interaction.command.name}",
            icon_url=interaction.user.default_avatar,
        )

    return embed


def ordinal(n) -> str:
    suffix: list[str] = ["th", "st", "nd", "rd"] + ["th"] * 6
    if 10 <= n % 100 <= 20:
        suffix_choice = "th"
    else:
        suffix_choice = suffix[n % 10]
    return f"{n}{suffix_choice}"
